package utils

import "net/http"

/*
  Status:
	1 成功
	0 失败
	2.. 文章相关错误
	3.. 用户相关错误
 */
const (
	SUCCESS = 1
	ERROR 	= 0

	//文章

	ERROR_AUTHOR_ID_NOT_EXIXT 	= 201
	ERROR_AUTHOR_ID_NOT_NULL 	= 202
	ERROR_POST_ID_NOT_EXIXT 	= 203
	ERROR_POST_ID_NOT_NULL 		= 204
	ERROR_POST_TITLE_NOT_NULL 	= 205

	//用户

	ERROR_USERNAME_TYPE_WRONG 	= 301
	ERROR_USERNAME_NOT_EXIST 	= 302
	ERROR_USERNAME_EXIST 		= 303
	ERROR_USERNAME_NOT_NULL 	= 304
	ERROR_NICKNAME_TYPE_WRONG 	= 305
	ERROR_NICKNAME_NOT_EXIST 	= 306
	ERROR_NICKNAME_EXIST 		= 307
	ERROR_NICKNAME_NOT_NULL 	= 308
	ERROR_PASSWORD_TYPE_WRONG 	= 309
	ERROR_PASSWORD_NOT_NULL 	= 310
	ERROR_MAIL_TYPE_WRONG 		= 311
	ERROR_MAIL_NOT_EXIST  		= 312
	ERROR_MAIL_EXIST  			= 313
	ERROR_MAIL_NOT_NULL  		= 314
	ERROR_ROLE_NOT_EXIET		= 315
	ERROR_ROLE_NOT_NULL			= 316
	ERROR_ROLE_TYPE_WRONG		= 317
	ERROR_TOKEN_EXIST 			= 318
	ERROR_TOKEN_RUNTIME 		= 319
	ERROR_TOKEN_WRONG 			= 320
	ERROR_TOKEN_TYPE_WRONG 		= 321
	ERROR_PAGESIZE_TYPE_WRONG	= 322
	ERROR_PAGESIZE_NOT_NULL		= 323
	ERROR_PAGENUM_TYPE_WRONG	= 324
	ERROR_PAGENUM_NOT_NULL		= 325
	ERROR_USERID_TYPE_WRONG		= 326
	ERROR_USERID_NOT_EXIET		= 327
	ERROR_PASSWORD_WRONG		= 328

	//数据库
	ERROR_DATABASE_WRITE		= 401
	ERROR_DATABASE_SEARCH		= 402
	ERROR_DATABASE_DELETE		= 403
)

var errorStatus = map[int]string{
	SUCCESS : "OK",
	ERROR : "FAILED",

	ERROR_AUTHOR_ID_NOT_EXIXT : "作者ID不存在",
	ERROR_AUTHOR_ID_NOT_NULL : "作者ID不能为空",
	ERROR_POST_ID_NOT_EXIXT : "文章ID不存在",
	ERROR_POST_ID_NOT_NULL : "文章ID不能为空",
	ERROR_POST_TITLE_NOT_NULL : "文章标题不能为空",

	ERROR_USERNAME_TYPE_WRONG : "用户名不合法",
	ERROR_USERNAME_NOT_EXIST : "用户名不存在",
	ERROR_USERNAME_EXIST : "用户名已存在",
	ERROR_USERNAME_NOT_NULL : "用户名不能为空",
	ERROR_NICKNAME_TYPE_WRONG : "昵称不合法",
	ERROR_NICKNAME_NOT_EXIST : "昵称不存在",
	ERROR_NICKNAME_EXIST : "昵称已存在",
	ERROR_NICKNAME_NOT_NULL : "昵称不能为空",
	ERROR_PASSWORD_TYPE_WRONG : "密码不合法",
	ERROR_PASSWORD_NOT_NULL : "密码不能为空",
	ERROR_MAIL_TYPE_WRONG : "邮箱不合法",
	ERROR_MAIL_NOT_EXIST : "邮箱不存在",
	ERROR_MAIL_EXIST : "邮箱已存在",
	ERROR_MAIL_NOT_NULL : "邮箱不能为空",
	ERROR_ROLE_NOT_EXIET : "用户类型不存在",
	ERROR_ROLE_NOT_NULL : "用户类型不能为空",
	ERROR_ROLE_TYPE_WRONG: "用户类型不合法",
	ERROR_TOKEN_EXIST : "TOKEN不存在",
	ERROR_TOKEN_RUNTIME : "TOKEN已过期",
	ERROR_TOKEN_WRONG : "TOKEN错误",
	ERROR_TOKEN_TYPE_WRONG : "TOKEN格式错误",
	ERROR_PAGESIZE_TYPE_WRONG : "分页大小不合法",
	ERROR_PAGESIZE_NOT_NULL : "分页大小不能为空",
	ERROR_PAGENUM_TYPE_WRONG : "分页数量不合法",
	ERROR_PAGENUM_NOT_NULL : "分页数量不能为空",
	ERROR_USERID_TYPE_WRONG: "用户ID不合法",
	ERROR_USERID_NOT_EXIET: "用户ID不存在",
	ERROR_PASSWORD_WRONG : "密码错误",

	ERROR_DATABASE_WRITE :  "数据库写入失败",
	ERROR_DATABASE_SEARCH : "数据库查询失败",
	ERROR_DATABASE_DELETE : "数据库删除失败",
}

//获取错误异常

func GetErrorMessage(status int) string {
	return errorStatus[status]
}

func HandleError(status int, w http.ResponseWriter, r *http.Request) {
	w.Write(MapToBody(Map{
		"status":status,
		"desc": GetErrorMessage(status),
	}))
}